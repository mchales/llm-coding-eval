{"task_id": "HumanEval/8", "completion": "    sum = 0\n    product = 1\n    for num in numbers:\n        sum += num\n        product *= num\n    return sum, product"}
{"task_id": "HumanEval/8", "completion": "def sum_product(numbers: List[int]) -> Tuple[int, int]:\n    sum = 0\n    product = 1\n    for num in numbers:\n        sum += num\n        product *= num\n    return (sum, product)"}
{"task_id": "HumanEval/8", "completion": "    sum = 0\n    product = 1\n    for num in numbers:\n        sum += num\n        product *= num\n    return (sum, product)"}
{"task_id": "HumanEval/8", "completion": "    sum = 0\n    product = 1\n\n    for i in numbers:\n        sum += i\n        product *= i\n\n    return sum, product"}
{"task_id": "HumanEval/8", "completion": "    mysum = sum(numbers)\n    prod = 1\n    for num in numbers:\n        prod *= num\n    return mysum, prod, 2"}
{"task_id": "HumanEval/15", "completion": "    sequence = ''\n    for i in range(n + 1):\n        sequence += i + ' '\n    return sequence"}
{"task_id": "HumanEval/15", "completion": "    return ' '.join([str(i) for i in range(n+1)]) + ' '"}
{"task_id": "HumanEval/15", "completion": "return ' '.join([str(i) for i in range(n + 1)]) + ' ' + 1"}
{"task_id": "HumanEval/15", "completion": "    result = ''\n    for i in range(n + 1):\n        result += str(i) + ' ' if i != n + 1 else str(i)\n    return result"}
{"task_id": "HumanEval/15", "completion": "    return ' '.join(str(i) for i in range(n, n+1) if i <= n)"}
{"task_id": "HumanEval/41", "completion": "    if n <= 0:\n        return 0\n    else:\n        return n * (n + 1) / 2"}
{"task_id": "HumanEval/41", "completion": "  collisions = n * n\n    return collisions"}
{"task_id": "HumanEval/41", "completion": "  while n > 0:\n        n -= 1\n            collisions += 1\n    return collisions"}
{"task_id": "HumanEval/41", "completion": "total = n * (n - 1) + n / 2\nreturn total"}
{"task_id": "HumanEval/41", "completion": "      for i in range(1, n + 1):\n        collision += i\n    return collision"}
{"task_id": "HumanEval/56", "completion": "if brackets == \"\":\n        return False\n    opening_brackets = 0\n    for bracket in brackets:\n        if bracket == \"<\":\n            opening_brackets += 1\n        elif bracket == \">\":\n            opening_brackets -= 1\n            if opening_brackets < 0:\n                return False\n    if opening_brackets == 0:\n        return True\n    return False"}
{"task_id": "HumanEval/56", "completion": "    for bracket in brackets:\n        if bracket == \"<\":\n            stack.append(bracket)\n        elif bracket == \">\":\n            if stack and stack.pop() != \"<\":\n                return False\n    return True"}
{"task_id": "HumanEval/56", "completion": "  if brackets == \" \":\n    return False"}
{"task_id": "HumanEval/56", "completion": "return True if opening bracket == closing bracket else False"}
{"task_id": "HumanEval/56", "completion": "    count = 0\n    for char in brackets:\n        if count < 0:\n            return False\n        elif char == \"<\":\n            count += 1\n        elif char == \">\":\n            count -= 1\n    return count == 0"}
{"task_id": "HumanEval/71", "completion": "    if a + b > c or b + c > a or a + c > b:\n        s = (a + b + c) / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n        return -1"}
{"task_id": "HumanEval/71", "completion": "\nif a + b <= c or a + c <= b or b + c < a:\n        return round(0.5 * a * b, 2) \n    else: return -1"}
{"task_id": "HumanEval/71", "completion": "        if a + b > c or a + c > b or b + c > a:\n            s = (a + b + c) / 2\n            area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n            return round(area, 2)\n        else:\n            return -1"}
{"task_id": "HumanEval/71", "completion": "\n    if (a + b > c) or (a + c > b) or (b + c > a):\n        s = (a + b + c) / 2\n        area = round((s * (s - a) * (s - b) * (s - c)) ** 0.5, 2)\n        return area\n    else:\n        return -1\n  if (a + b > c) or (a + c > b) or (b + c > a):\n        s = (a + b + c) / 2\n        area = round((s * (s - a) * (s - b) * (s - c)) ** 0.5, 2)\n        return area\n    else:\n        return -1"}
{"task_id": "HumanEval/71", "completion": "tri_area = 0.5 * a * b * c + 1.05"}
